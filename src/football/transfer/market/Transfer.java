/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package football.transfer.market;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author haris
 */
public class Transfer extends javax.swing.JFrame{

    /**
     * Creates new form Transfer
     */
    String[] Player = new String[10];
    String[] Player2 = new String[10];
    
    
    public Transfer() {
        initComponents(); 
        jTextField2.setText(Integer.toString(Teams.Budget));
        if ("Chelsea".equals(Teams.TeamName)){
        String[] selecteam = {"    ","Barcelona", "Madrid", "Juventus", "Manchester"};
      jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(selecteam));}
                if ("Barcelona".equals(Teams.TeamName)){
        String[] selecteam = {"    ","Chelsea", "Madrid", "Juventus", "Manchester"};
      jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(selecteam));}
                        if ("Madrid".equals(Teams.TeamName)){
        String[] selecteam = {"    ","Barcelona", "Chelsea", "Juventus", "Manchester"};
      jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(selecteam));}
                if ("Juventus".equals(Teams.TeamName)){
        String[] selecteam = {"    ","Barcelona", "Madrid", "Chelsea", "Manchester"};
      jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(selecteam));}
                        if ("Manchester".equals(Teams.TeamName)){
        String[] selecteam = {"    ","Barcelona", "Madrid", "Juventus","Chelsea"};
      jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(selecteam));}
        
        
        jLabel7.setText("My Team : " + Teams.TeamName );
              this.UpdateFile();
      
    }
    public void UpdateFile(){
          
                jTextArea1.setText("");
      try {
      File myObj = new File(Teams.TeamName+".txt");
      Scanner myReader = new Scanner(myObj);
      int count=0;
      while (myReader.hasNextLine()) {
       String data = myReader.nextLine();
        Player[count] = data.substring(0,29) + data.substring(62,65);
        jTextArea1.append(Player[count] + "\n");
        count++;
      }
      myReader.close();
    } catch (FileNotFoundException e) {
      JOptionPane.showMessageDialog(null, e);
      this.setVisible(false);
    }  }
    
    public void Updatefile2(){
           String data2 ="";
                jTextArea2.setText("");try {
      File myObj2 = new File(jComboBox1.getSelectedItem().toString()+".txt");
      Scanner myReader2 = new Scanner(myObj2);
      int count2=0;
      while (myReader2.hasNextLine()) {
        data2 = myReader2.nextLine();
       
        Player2[count2] = data2.substring(0,29) + data2.substring(62,65);
        jTextArea2.append(Player2[count2] + "\n");
        count2++;
      }
      myReader2.close();
    } catch (FileNotFoundException e) {
      //JOptionPane.showMessageDialog(null, e);
   
      Transfer c = new Transfer();
      c.setVisible(true);
      this.setVisible(false);
    }  }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TRANSFER WINDOW");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(51, 51, 51));
        jLabel14.setText("#");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 20, 20));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 51));
        jLabel12.setText(" Name");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 130, 50, 20));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(51, 51, 51));
        jLabel13.setText("#");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 30, 20));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(51, 51, 51));
        jLabel11.setText(" Name");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 50, 20));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("Value €");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 50, 20));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setText("Value €");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 50, 20));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(51, 51, 51));
        jTextArea1.setRows(5);
        jTextArea1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 270, 240));

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel1.setText("TRANSFER WINDOW");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(234, 11, -1, -1));

        jLabel3.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel3.setText("BUDGET :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 0, 90, 50));

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Courier New", 0, 14)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(51, 51, 51));
        jTextArea2.setRows(5);
        jTextArea2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 150, 280, 240));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "  ", "Chelsea", "Barcelona", "Madrid", "Juventus", "Manchester" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jComboBox1PropertyChange(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, 100, -1));

        jLabel4.setFont(new java.awt.Font("Gadugi", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Select team to deal player with :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 60, 170, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("SQUAD");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 140, 30));

        jLabel6.setText("Select Player number :");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 410, 140, 20));

        jTextField1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 410, 30, 20));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("BUY");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, 50, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 51, 51));
        jLabel7.setText("AA");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 130, 20));

        jTextField2.setEditable(false);
        jTextField2.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        jTextField2.setForeground(new java.awt.Color(255, 0, 0));
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("123");
        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));
        jTextField2.setCaretColor(new java.awt.Color(255, 255, 255));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 80, 40));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setText("SELL");
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 440, 50, 40));

        jLabel8.setText("Select Player number : ");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 410, -1, 20));

        jTextField3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 153)));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 410, 30, 20));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setText("BACK");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 7, 60, 30));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/football/transfer/market/6c2916336e97f5bcac95dba0a075da55.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jLabel2.setAutoscrolls(true);
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 510));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        if ("  ".equals(jComboBox1.getSelectedItem().toString())){ 
      Transfer c = new Transfer();} else {
       this.Updatefile2();}
       jLabel5.setText(jComboBox1.getSelectedItem().toString()+ " Squad");
          
       
       
       
    
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      if  ("".equals(jTextField1.getText()) || jTextField1.getText()==null ){
          JOptionPane.showMessageDialog(rootPane,"SELECT A PLAYER FIRST");
      this.setVisible(false);
      Transfer d = new Transfer();
      d.setVisible(true);
      return;
      }
      if  ("".equals(jComboBox1.getSelectedItem().toString()) || "    ".equals(jComboBox1.getSelectedItem().toString()) ){
          JOptionPane.showMessageDialog(rootPane,"SELECT A TEAM FIRST");
      this.setVisible(false);
      Transfer e = new Transfer();
      e.setVisible(true);
      return;
      }
        int worth=Integer.parseInt(Player2[Integer.parseInt(jTextField1.getText())-1].substring(29));
      
      
       if (Teams.NoOfPlayers<10){
        if (worth<=(Teams.Budget)){
        try {
            FileWriter myWriter =null;
            try {
                // TODO add your handling code here:
                int count =0;
                while (Player[count]!=null && count<10){count++;}
                String temp = count+1 + "|"+Player2[Integer.parseInt(jTextField1.getText())-1].substring(2,31);// + Player2[Integer.parseInt(jTextField1.getText())-1].substring(62,64);
                Player[count] = temp;
                jTextArea1.append(Player[count] +"\n");
                count=Integer.parseInt(jTextField1.getText())-1;
                while (Player2[count+1]!=null && count<10){
                    Player2[count]=count+1+"|"+Player2[count+1].substring(2);
                    count++;}
                count=0;
                jTextArea2.setText("");
                while (Player2[count+1]!=null && count<10){
                    jTextArea2.append(Player2[count]+"\n");
                    count++;}
                JOptionPane.showMessageDialog(rootPane, "PLAYER PURCHASED SUCCESSFULLY");
                this.setVisible(false);
                Menu m = new Menu();
                m.setVisible(true);
                Teams.NoOfPlayers= Teams.NoOfPlayers +1;
                Teams.NoOfPlayers2=Teams.NoOfPlayers2-1;
                Teams.Budget = Teams.Budget-worth;
                File myObj = new File(jComboBox1.getSelectedItem().toString()+".txt");
                File myObj2 = new File(Teams.TeamName+".txt");
                Scanner myReader3 = new Scanner(myObj);
                //  Scanner myReader4= new Scanner(myObj2);
                BufferedReader reader = new BufferedReader(new FileReader(Teams.TeamName+".txt"));
                int lines = 1;
                while (reader.readLine() != null) lines++;
                reader.close();
                int num=Integer.parseInt(jTextField1.getText());
                count=0;
                String data3="";
                while (count<=num-1){
                    data3 = myReader3.nextLine();
                    
                    count++;}
                myWriter = new FileWriter(Teams.TeamName+".txt", true);
                myWriter.append(lines +data3.substring(1)+"\n");
                myWriter.close();
                myReader3.close();
            }catch (IOException ex) {
                Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    myWriter.close();
                } catch (IOException ex) {
                    Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
                    //              //
                }
                
                
                
                
                
            }
            String[] Players = new String[9];
            File myObj = new File(jComboBox1.getSelectedItem().toString()+".txt");
            Scanner myReader = null;
            try {
                myReader = new Scanner(myObj);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
            }
            int i=0;
            String data="";
            while (myReader.hasNextLine()){
                data = myReader.nextLine();
                Players[i] = data;
                
                i++;
                }
            myReader.close();
            for (int x=0;x<9;x++){if (Players[x]==null){Players[x]="";}}
            FileWriter writes = new FileWriter("aa.txt",true);
            int len = Players.length;
            
            for ( i = 0; i < len-1; i++) {
                if (i>=Integer.parseInt(jTextField1.getText())-1 && Players[i+1]!=""){
                try {
                    writes.append(Integer.toString((Integer.parseInt(Players[i+1].substring(0,1))-1))+Players[i+1].substring(1) + "\n");
                } catch (IOException ex) {
                    Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
                } } else if((i<Integer.parseInt(jTextField1.getText())-1 && Players[i+1]!="")) {writes.append(Players[i] + "\n");} }
            
            try {
                writes.close();
            } catch (IOException ex) {
                Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }catch (IOException ex) {
            Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
        
    }//GEN-LAST:event_jButton1ActionPerformed
        }   else {
                JOptionPane.showMessageDialog(rootPane,"YOU CANNOT AFFORD THIS PLAYER");
        Transfer c = new Transfer();
        jTextField1.setText("");
        }
       } else {JOptionPane.showMessageDialog(rootPane,"MAXIMUM 10 PLAYERS ARE ALLOWED IN A TEAM");
        Transfer c = new Transfer();
        jTextField1.setText("");}
      
      
       
       
       
     File ob1 = new File(jComboBox1.getSelectedItem().toString()+".txt");
       ob1.delete();
       File ob2 = new File("aa.txt");
       File ob3 = new File(jComboBox1.getSelectedItem().toString()+".txt");
      // File ob3 = new File("aa.txt");
      if (ob2.renameTo(ob3)){System.out.println("SUCCESS");}
    
    }
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
         if  ("".equals(jTextField3.getText()) || jTextField3.getText()==null ){
          JOptionPane.showMessageDialog(rootPane,"SELECT A PLAYER FIRST");
      this.setVisible(false);
      Transfer d = new Transfer();
      d.setVisible(true);
      return;
      }
      if  ("".equals(jComboBox1.getSelectedItem().toString()) || "    ".equals(jComboBox1.getSelectedItem().toString()) ){
          JOptionPane.showMessageDialog(rootPane,"SELECT A TEAM TO SELL TO FIRST");
      this.setVisible(false);
      Transfer e = new Transfer();
      e.setVisible(true);
      return;
      }
        int worth=Integer.parseInt(Player[Integer.parseInt(jTextField3.getText())-1].substring(29));
       
      
       if (Teams.NoOfPlayers>5){
        
        try {
            FileWriter myWriter =null;
            try {
                // TODO add your handling code here:
                int count =0;
                while (Player2[count]!=null && count<10){count++;}
                String temp = count+1 + "|"+Player[Integer.parseInt(jTextField3.getText())-1].substring(2);// + Player2[Integer.parseInt(jTextField1.getText())-1].substring(62,64);
                Player2[count] = temp;
                jTextArea2.append(Player2[count] +"\n");
                count=Integer.parseInt(jTextField3.getText())-1;
                while (Player[count+1]!=null && count<10){
                    Player[count]=count+1+"|"+Player[count+1].substring(2);
                    count++;}
                count=0;
                jTextArea1.setText("");
                while (Player[count+1]!=null && count<10){
                    jTextArea1.append(Player[count]+"\n");
                    count++;}
                JOptionPane.showMessageDialog(rootPane, "PLAYER SOLD SUCCESSFULLY");
                this.setVisible(false);
                Menu m = new Menu();
                m.setVisible(true);
                Teams.NoOfPlayers= Teams.NoOfPlayers -1;
                //Teams.NoOfPlayers2=Teams.NoOfPlayers2-1;
                Teams.Budget = Teams.Budget+worth;
                File myObj = new File(Teams.TeamName+".txt");
                File myObj2 = new File(jComboBox1.getSelectedItem().toString()+".txt");
                Scanner myReader3 = new Scanner(myObj);
                //  Scanner myReader4= new Scanner(myObj2);
                BufferedReader reader = new BufferedReader(new FileReader(jComboBox1.getSelectedItem().toString()+".txt"));
                int lines = 1;
                while (reader.readLine() != null) lines++;
                reader.close();
                int num=Integer.parseInt(jTextField3.getText());
                count=0;
                String data3="";
                while (count<=num-1){
                    data3 = myReader3.nextLine();
                    
                    count++;}
                myWriter = new FileWriter(jComboBox1.getSelectedItem().toString()+".txt", true);
                myWriter.append(lines+data3.substring(1)+"\n");
                myWriter.close();
                myReader3.close();
            }catch (IOException ex) {
                Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
            } finally {
                try {
                    myWriter.close();
                } catch (IOException ex) {
                    Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
                    //              //
                }
                
                
                
                
                
            }
            String[] Players = new String[9];
            File myObj = new File(Teams.TeamName+".txt");
            Scanner myReader = null;
            try {
                myReader = new Scanner(myObj);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
            }
            int i=0;
            String data="";
            while (myReader.hasNextLine()){
                data = myReader.nextLine();
                Players[i] = data;
                
                i++;
               }
            myReader.close();
            for (int x=0;x<9;x++){if (Players[x]==null){Players[x]="";}}
            FileWriter writes = new FileWriter(Teams.TeamName+".txt"); //here
            int len = Players.length;
            writes.write("");
            for ( i = 0; i < len-1; i++) {
                if (i>=Integer.parseInt(jTextField3.getText())-1 && Players[i+1]!=""){
                try {
                    writes.write(Integer.toString((Integer.parseInt(Players[i+1].substring(0,1))-1))+Players[i+1].substring(1) + "\n");
                } catch (IOException ex) {
                    Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
                } } else if((i<Integer.parseInt(jTextField3.getText())-1 && Players[i+1]!="")) {writes.append(Players[i] + "\n");} }
            
            try {
                writes.close();
            } catch (IOException ex) {
                Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
            }
        }catch (IOException ex) {
            Logger.getLogger(Transfer.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
        
    }                                        
           
       } else {JOptionPane.showMessageDialog(rootPane,"MINIMUM 5 PLAYERS MUST BE THERE IN A TEAM");
        Transfer c = new Transfer();
        jTextField3.setText("");}
      
    
       
       
       
     
         
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jComboBox1PropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox1PropertyChange

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Menu m = new Menu();
        m.setVisible(true);
        
    }//GEN-LAST:event_jButton3ActionPerformed
        

            
            
        
           
           
   
        
  
     
    
    
    /**
     * @param args the command line arguments
     */
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
